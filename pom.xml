<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- graphql-java version is set on line 284 -->

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.4.RELEASE</version>
		<relativePath />
	</parent>

	<groupId>com.graphql-java-generator</groupId>
	<artifactId>graphql-maven-plugin-samples-allGraphQLCases-server</artifactId>
	<version>local-SNAPSHOT</version>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<!-- We don't want to spam the repository with test/sample artefacts -->
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>

		<extensions>
			<!-- Prevents this error, with JDK 13: -->
			<!-- NoSuchMethodError: 'java.lang.String javax.annotation.Resource.lookup()' -->
			<extension>
				<groupId>javax.annotation</groupId>
				<artifactId>javax.annotation-api</artifactId>
				<version>1.3.2</version>
			</extension>
			<extension>
				<groupId>javax.annotation</groupId>
				<artifactId>jsr250-api</artifactId>
				<version>1.0</version>
			</extension>
		</extensions>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>1.6</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.1.0</version>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
					<configuration> <!-- add this to disable checking -->
						<doclint>none</doclint>
						<failOnError>false</failOnError>
						<sourceFileExcludes>
							<sourceFileExclude>**/target/**</sourceFileExclude>
						</sourceFileExcludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>3.6.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>3.0.0-M1</version>
					<configuration>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<useReleaseProfile>false</useReleaseProfile>
						<releaseProfiles>release,!withSamples</releaseProfiles>
						<goals>deploy</goals>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-scm-plugin</artifactId>
					<version>1.9.4</version>
					<configuration>
						<tag>${project.artifactId}-${project.version}</tag>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.7.1</version>
					<configuration>
						<skipDeploy>true</skipDeploy>
						<additionalparam>${javadoc.opts}</additionalparam>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.1.0</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
							<configuration>
								<additionalparam>${javadoc.opts}</additionalparam>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.21.0</version>
					<dependencies>
						<dependency>
							<!-- Necessary due to a bug in the previous version. This conf will 
								probably be obsolete in a next version of spring boot -->
							<groupId>org.junit.platform</groupId>
							<artifactId>junit-platform-surefire-provider</artifactId>
							<version>1.2.0</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>1.6.8</version>
					<extensions>true</extensions>
					<configuration>
						<serverId>ossrh</serverId>
						<nexusUrl>https://oss.sonatype.org/</nexusUrl>
						<autoReleaseAfterClose>true</autoReleaseAfterClose>
					</configuration>
				</plugin>
				<plugin>
					<!-- This plugin allows to start the SpringBoot StarWars-server in the 
						background during the integration tests -->
					<groupId>com.bazaarvoice.maven.plugins</groupId>
					<artifactId>process-exec-maven-plugin</artifactId>
					<version>0.7</version>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>2.21.0</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-junit-jupiter</artifactId>
				<version>2.23.0</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.javatuples</groupId>
				<artifactId>javatuples</artifactId>
				<version>1.2</version>
				<scope>test</scope>
			</dependency>

			<!-- Dependencies used to build the Maven plugin -->
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-core</artifactId>
				<version>3.6.3</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-plugin-api</artifactId>
				<version>3.6.3</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.plugin-tools</groupId>
				<artifactId>maven-plugin-annotations</artifactId>
				<version>3.6.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-project</artifactId>
				<version>2.2.1</version>
			</dependency>

			<!-- dependencies within this project -->
			<dependency>
				<groupId>com.graphql-java-generator</groupId>
				<artifactId>graphql-java-client-dependencies</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>com.graphql-java-generator</groupId>
				<artifactId>graphql-java-server-dependencies</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>com.graphql-java-generator</groupId>
				<artifactId>graphql-java-runtime</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.graphql-java-generator</groupId>
				<artifactId>graphql-maven-plugin-logic</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.graphql-java-generator</groupId>
				<artifactId>graphql-maven-plugin-samples-allGraphQLCases-server</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.graphql-java-generator</groupId>
				<artifactId>graphql-maven-plugin-samples-Basic-server</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.graphql-java-generator</groupId>
				<artifactId>graphql-maven-plugin-samples-Forum-server</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.graphql-java-generator</groupId>
				<artifactId>graphql-maven-plugin-samples-StarWars-server</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- dependencies for graphql -->
			<dependency>
				<groupId>com.graphql-java</groupId>
				<artifactId>graphql-java</artifactId>
				<!-- version>2020-05-19T19-17-54-57ce5cf5</version -->
				<version>15.0</version>
			</dependency>
			<dependency>
				<groupId>com.graphql-java</groupId>
				<artifactId>graphql-java-spring-boot-starter-webmvc</artifactId>
				<version>2019-06-24T11-47-27-31ab4f9</version>
			</dependency>
			<dependency>
				<groupId>com.graphql-java</groupId>
				<artifactId>graphql-java-spring-webmvc</artifactId>
				<version>2019-06-24T11-47-27-31ab4f9</version>
			</dependency>
			<dependency>
				<!-- com.graphql-java:graphiql-spring-boot-starter is deprecated. This 
					project has been moved to com.graphql-java-kickstart -->
				<groupId>com.graphql-java-kickstart</groupId>
				<artifactId>graphiql-spring-boot-starter</artifactId>
				<version>6.0.1</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>com.graphql-java</groupId>
				<artifactId>java-dataloader</artifactId>
				<version>2.2.3</version>
			</dependency>
			<dependency>
				<groupId>com.graphql-java</groupId>
				<artifactId>graphql-java-extended-scalars</artifactId>
				<version>1.0.1</version>
			</dependency>


			<!-- Other dependencies -->
			<dependency>
				<groupId>javax.activation</groupId>
				<artifactId>activation</artifactId>
				<version>1.1.1</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.6</version>
			</dependency>
			<dependency>
				<groupId>net.sf.dozer</groupId>
				<artifactId>dozer</artifactId>
				<version>5.5.1</version>
			</dependency>
			<dependency>
				<groupId>com.opencsv</groupId>
				<artifactId>opencsv</artifactId>
				<version>5.0</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.persistence</groupId>
				<artifactId>org.eclipse.persistence.jpa</artifactId>
				<version>2.7.4</version>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>2.1.210</version>
			</dependency>
			<dependency>
				<groupId>org.leadpony.justify</groupId>
				<artifactId>justify</artifactId>
				<version>2.0.0</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>1.18.10</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity</artifactId>
				<version>1.7</version>
			</dependency>
			<dependency>
				<groupId>org.awaitility</groupId>
				<artifactId>awaitility</artifactId>
				<version>3.0.0</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Dependencies for tests -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Dependencies for the generated code -->
		<dependency>
			<groupId>com.graphql-java-generator</groupId>
			<artifactId>graphql-java-server-dependencies</artifactId>
			<type>pom</type>
		</dependency>
		<!-- Complementary graphql dependencies -->
		<dependency>
			<groupId>com.graphql-java</groupId>
			<artifactId>graphql-java-extended-scalars</artifactId>
		</dependency>

		<!-- Generates at runtime a GUI to execute GraphQL requests. -->
		<!-- Very useful for tests, but take care for production ! -->
		<dependency>
			<groupId>com.graphql-java-kickstart</groupId>
			<artifactId>graphiql-spring-boot-starter</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>net.sf.dozer</groupId>
			<artifactId>dozer</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
		</dependency>

	</dependencies>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<reportSets>
					<reportSet>
						<id>non-aggregate</id>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

</project>
